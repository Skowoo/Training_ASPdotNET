@model AplikacjaLaby.Classes.PagingList<Book>

<h2>Lista Ksiązek:</h2>

<a asp-action="Create" class="btn btn-primary">Dodaj książkę</a> | 
<a asp-action="CreateUsingApi" class="btn btn-primary">Dodaj książkę (wersja z API)</a>

<table class="table">
    <tr> @* Table Row *@
        <th> @* Table Head *@
            Tytuł
        </th>
        <th>
            Autor
        </th>
        <th>
            Ilość stron
        </th>
        <th>
            Numer ISBN
        </th>
        <th>
            Rok wydania
        </th>
        <th>
            Wydawca
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Data.GetEnumerator().Current.Availability)  @* Display name taken from field name od Name attribute if specified *@
        </th>
        <th>
            Właściciel:
        </th>
        <th>
            Akcje
        </th>
    </tr>
    @foreach(Book item in @Model.Data)
    {
        <tr>
            <td> @* Table Data *@
                @item.Title
            </td>
            <td>
                @item.Author
            </td>
            <td>
                @item.Pages
            </td>
            <td>
                @item.ISBN
            </td>
            <td>
                @item.PublishYear
            </td>
            <td>
                @item.Publisher
            </td>
            <td>
                @item.Availability.GetDisplayName()  @* !! Custom Extension method !! *@
            </td>
            <td>
                @item.OwnerId
            </td>
            <td>
                <a asp-controller="Book" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary">Edytuj</a> |
                <a asp-controller="Book" asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary">Szczegóły</a> |
                <a asp-controller="Book" asp-action="Delete" asp-route-id="@item.Id" class="btn btn-primary">Usuń</a>
            </td>
        </tr>
    }
</table>

<nav aria-label="Books page navigation">
    <ul class="pagination">
        @if (Model.IsPrevious)
        {
            <li class="page-item">
                <a class="page-link"
                   asp-action="PagedIndex"
                   asp-route-page="@(Model.Page - 1)"
                   asp-route-size="@Model.Size">
                    Poprzednia
                </a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <a class="page-link">Poprzednia</a>
            </li>
        }
        <li class="page-item disabled">
            <a class="page-link">@Model.Page</a>
        </li>
        @if (Model.IsNext)
        {
            <li class="page-item">
                <a class="page-link"
                   asp-action="PagedIndex"
                   asp-route-page="@(Model.Page + 1)"
                   asp-route-size="@Model.Size">
                    Następna
                </a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <a class="page-link">Następna</a>
            </li>
        }
    </ul>
</nav>